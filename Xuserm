###################################################################
#Nombre script	:multifunction
#Descripcion	:Menú multifunción enfocado a la gestión de usuarios.
#Lenguaje	:bash/shell
#Autor		:Yago López Prado
#Email		:yago2003.lopez@gmail.com
#Codificación	:_-*Unicode-UTF-8*-_
###################################################################
if [ `whoami` != "root" ]
then
#Declaramso las funciones "menu" y "case1"
menu()
{
#Modificar datos segun las preferencias
altura=15
anchura=70
altura_eleccion=4
subtitulo="Multifunction para linux v1.0 - © 2021 Yago López Prado"
titulo="Menu"
menu="Elige una de las siguiente opciones:"
#Declaramos las diferentes opciones del menu
opciones=(1 "Crear usuario"
         2 "Cambiar la contraseña a un usuario"
         3 "Crear un grupo"
         4 "Añadir un usuario a grupo"
         5 "Ver datos de un usuario"
         6 "Borrar un usuario" 
         7 "Borrar un grupo"
	 8 "Ver usuarios")
#Metemos el diseño del menu dentro de la variable "input" que contendrá el valor introducido por el usuario
input=$(dialog --clear \
		--backtitle "$subtitulo" \
                --title "$titulo" \
                --menu "$menu" \
                $altura $anchura $altura_eleccion \
                "${opciones[@]}" \
                2>&1 >/dev/tty)
}
case1()
{
#Indicamos las distintas salidas para "input" en $input
    case $input in
    1)  echo "Nombre del usuario:"
        read name1
        sudo adduser $name1        
        if [ $? = 0 ] #Comprueba si el proceso anterior da como resultado 0
        then
            notify-send "Usuario creado correctamente"
            clear
        else
            echo "=========================="
            notify-send "Error al crear el usuario"
            clear
        fi
        ;;
    2)  echo "A que usuario le quiere cambiar la contraseña?"
        read name2
        sudo passwd $name2
        if [ $? = 0 ]
        then
            notify-send "Contraseña actualizada"
            clear
        else
            echo "==============================="
            notify-send "Error al cambiar la contraseña"
            clear
        fi;;
    3)  echo "Nombre del nuevo grupo:"
        read name3
        sudo addgroup $name3
        if [ $? = 0 ]
        then
            notify-send "Grupo creado correctamente"
            clear
        else
            echo "========================"
            notify-send "Error al crear el Grupo"
            clear
        fi;;
    4)  echo "Nombre de usuario:"
        read name4
        echo "Nombre del grupo:"
        read group4
        if [ $? = 0 ]
        then
            sudo adduser $name4 $group4
            notify-send "Usuario trasladado"
        else
            echo "=========================="
            notify-send "Error al mover el usuario"
        fi;;
    5)  echo "Nombre de usuario:"
        read name5
        clear
        finger $name5
        if [ $? = 0 ]
        then
         echo "=========================="
            notify-send "Mostrando datos del usuario..."
	    read
        else
            echo "=========================="
            notify-send "Error al mostrar los datos del usuario"
        fi;;
    6)  echo "Nombre del usuario"
        read name6
        sudo deluser --remove-home $name6
            if [ $? = 0 ]
        then
         echo "=========================="
            clear
            notify-send "Usuario eliminado corectamente"
        else
            echo "==============================================="
            notify-send "Error al eliminar el usuario"
        fi;; 
    7)  echo "Nombre del grupo"
        read group7
        sudo delgroup $group7
        if [ $? = 0 ]
        then
         echo "=========================="
            clear
            notify-send "Grupo eliminado corectamente"
        else
            echo "==============================================="
            notify-send "Error al eliminar el grupo"
        fi;;
    8)	cat ~/passwd
	read;;
    $DIALOG_CANCEL)
	clear
	exit 0;;
    esac
}
#Blucle para evitar el cierre del programa a menos que el usuario lo indique
while true
    do
    clear
    menu
    case1
    done
clear
exit 0
else
echo "Error al iniciar Xuserm, por favor asegurese de iniciar el programa como un usuario ajeno a root"
exit 1
fi
